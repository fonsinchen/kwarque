"use strict";


var db = require('pg');
//or native libpq bindings
//var pg = require('pg').native

var kwarque = require('kwarque');

var config = {
    host : '/var/run/postgresql',
    database : 'kwarque'
};

var getFragments = function(timestamp, area, fn) {
    db.connect(config, function(err, client) {
        client.query("SELECT id, location[0] AS lon, location[1] AS lat, title, text FROM fragment", function(err, result) {
            fn(result);
        });
    });
};
        
var insertFragment = function(data, fn) {
    db.connect(config, function(err, client) {
        client.query({
            name : 'insert fragment',
            text : "INSERT INTO fragment (location, title, text) VALUES (POINT($1, $2), $3, $4)",
            values : [data.lon, data.lat, data.title, data.text]
        }, fn);
    });
};

kwarque.on('clientConnect', function(client) {
    /**
     * watch an area on the map.
     */
    client.on("watch", function(select, fn) {
        getFragments(select.timestamp, select.area, function(result) {
            fn(result);
        });
    });
    /**
     * ignore an area on the map
     */
    client.on("ignore", function(select, fn) {
                
        });
            
    client.on("insert", function(data, fn) {
        insertFragment(data, fn);
    });
});